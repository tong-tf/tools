#!/bin/bash

# echo -e "\033[30m黑色字\033[0m"
# echo -e "\033[31m红色字\033[0m"
# echo -e "\033[32m绿色字\033[0m"
# echo -e "\033[33m黄色字\033[0m"
# echo -e "\033[34m蓝色字\033[0m"
# echo -e "\033[35m紫色字\033[0m"
# echo -e "\033[36m天蓝字\033[0m"
# echo -e "\033[37m白色字\033[0m"


GREEN='\e[0;32m'
RED='\e[1;31m'
YELLOW='\e[1;33m'
END='\e[0m'

# 红色显示
function RED()
{
	echo -e  "${RED}$1${END}"
}

# 绿色显示
function GREEN()
{
	echo -e  "${GREEN}$1${END}"
}

# 绿色显示
function YELLOW()
{
	echo -e  "${YELLOW}$1${END}"
}

# 读取scatter文件，解析出要复制的文件
# $1 目标目录, 调用者要确保此目录存在
function copy_file()
{
#	GREEN "$# $1"
	if [ $# -ne 1 ]; then
		RED "$0 dest you miss destination folder"
		return -1
	fi
	if [ ! -d "$1" ]; then
		RED "$0 $1; $1 is not a directory or not exist"
		return -1
	fi
	cp *_Android_scatter.txt $1
	file_to_copy=$(awk '/file_name/{ if($2 != "NONE")print $2 ; }' *_Android_scatter.txt | uniq)
	for f in $file_to_copy; do
		name=${f%.*}
		ext=${f##*.}
        #echo "$name | $ext"
        if [ "$name" = "$ext" ] ; then  # for those without extension, we just copy it.
            GREEN $f
            cp -f $f $1
        fi
		candidate=(-sign. -verified. .)
		for c in ${candidate[@]}; do
			nf="${name}${c}${ext}"
			if [ -f "$nf" ]; then
				GREEN "$nf"
				cp -f $nf $1
				if [ "$?" -ne 0 ]; then
					RED "copy $nf to $1 fail"
					return $?
				fi
				break
			fi
		done
	done
}


# 读取scatter文件，解析出要复制的文件
# $1 目标目录, 调用者要确保此目录存在
function copy_modem()
{
	local db
	db="$1/DB"
	if [ -d "$db" ]; then
		rm -rf "$db"
	fi
	mkdir -p "$db"
	if ls vendor/etc/mddb/BPLGUInfoCustomAppSrcP* &>/dev/null ; then
		cp vendor/etc/mddb/BPLGUInfoCustomAppSrcP* "$db"
	fi
	if ls obj/CGEN/APDB* &>/dev/null ; then
		cp obj/CGEN/APDB* "$db"
	fi
}


function Usage()
{
	echo "Auto package system: "
	echo "Usage: pack2 project target_folder_name"
}

# 打开固件
# $1 要打开的mtk项目
# $2 目标文件夹名
# $3 zip  是否打开固件，为空不打包，为zip则使用zip压缩
function pack_img()
{
	local out_base=out/target/product
	if [[ $# -lt 2 ]]; then
		Usage
		exit 1
	fi
	rom_folder="$(pwd)/../ROM"
	target="$(pwd)/../ROM/$2"
	project_base="$out_base/$1"
	if [[ ! -d "$project_base" ]]; then
		RED "$project_base is not a folder or exist"
		Usage
		exit 1
	else
		if [ -d "$target" ]; then
			rm -rf "$target"
		fi
		mkdir -p "$target"
		pushd "$project_base"  &>/dev/null
	#	gen_file
		copy_file "$target"
		copy_modem "$target"
		popd &>/dev/null
	fi

	if [ "$3"x = "zip"x ]; then
		pushd $rom_folder
		zip -r  ${2}.zip $2
   		echo "zip -r ${2}.zip $2"
   		popd
	fi
}



mid_project=$(ls out/target/product/)
if [[ -z $mid_project ]]; then
	RED "No mtk project found, return"
	exit -1
fi
out_mid=out/target/product/$mid_project
system_prop=$out_mid/system/build.prop
folder_name=$(awk -F= '/ro.build.display.id/ { print $2}; ' $system_prop)
pcba=$(echo ${folder_name##*_} | cut -d- -f1)
pcba_folder=device/mediateksample/$mid_project/bnd/$pcba
echo $folder_name
# check items, we copy from PCBA folder
if [ ! -e $out_mid/items.ini ] ; then
    cp -v $pcba_folder/items.ini $out_mid/
fi
pack_img $mid_project  $folder_name zip




