#!/bin/bash
GREEN='\e[0;32m'
RED='\e[1;31m'
YELLOW='\e[1;33m'
END='\e[0m'
RED()
{
	echo -e  "${RED}$1${END}"
}

GREEN()
{
	echo -e  "${GREEN}$1${END}"
}

YELLOW()
{
    echo -e  "${YELLOW}$1${END}"
}

SCRIPT_PATH=`which $0`
SCRIPT_PATH=${SCRIPT_PATH%/*}/config.ini
ROOT=$PWD/..
TIME=`date +%Y-%m-%d-%H-%M`
BRANCH=`git branch | awk '{if(match($1,"*")){print $2}}'`
DEST_COMMIT=$ROOT/Patch/$BRANCH/Commit-$1
LOG_COMMIT=$ROOT/Patch/$BRANCH/Commit-$1/Readme.txt
DEST_BRANCH=$ROOT/Patch/$BRANCH/Diff-\("$BRANCH"\)_\("$1"\)
LOG_BRANCH=$ROOT/Patch/$BRANCH/Diff-\("$BRANCH"\)_\("$1"\)/Readme.txt
DEST_MODE1=$ROOT/Patch/$BRANCH/Patch_"$TIME"
LOG_MODE1=$ROOT/Patch/$BRANCH/Patch_"$TIME"/Readme.txt
DEST_MODE3=$ROOT/Patch/$BRANCH
LOG_MODE3=$ROOT/Patch/$BRANCH/Readme_"$TIME".txt
DEST_AFTER=$ROOT/Patch/$BRANCH/Patch_"$TIME"/after
DEST_BEFORE=$ROOT/Patch/$BRANCH/Patch_"$TIME"/before
LOG_MODE2=$ROOT/Patch/$BRANCH/Patch_"$TIME"/Readme.txt
PATCH_MODE=2
DIFF_COMMIT=0
DIFF_BRANCH=0
MODIFIED_TAG=Mod\:
DELETED_TAG=Del\:
ADDED_TAG=Add\:


if [ -e "$SCRIPT_PATH" ];then
	PATCH_MODE=`awk -F"=" '{if(/^patch_mode/)print $2}' "$SCRIPT_PATH"`
fi

if [ ! -e .git ];then
	RED "Error exec path!!!"
	exit 1
fi

if [ $# != 0 ];then
	RETSUT_1=`git log --pretty=format:"%H" | grep $1`
    RETSUT_2=`git branch |  grep $1`
	if [ ! -z "$RETSUT_1" -o "$1" == "HEAD" ];then
        DIFF_COMMIT=1
	fi

    if [ ! -z "$RETSUT_2" ];then
        DIFF_BRANCH=1
    fi

    if [ "$DIFF_COMMIT" = 0 -a "$DIFF_BRANCH" = 0 ];then
        RED "No found this commit id or branch!"
        exit
    fi
fi
fetch_list()
{
    if [ ! -z $2 ];then
        separation="========================================================================================"
        echo $separation >> $2
        echo $Patch Time : $TIME >> $2
        echo $Git Branch : $BRANCH >> $2
        git log -1
        git log -1 >> $2
    fi
    echo
    echo
    for j in $subfiles
    do
        FILE=${j:1}
        TAG=${j:0:1}
        if [ "$TAG" == "M" ];then
            TAG=$MODIFIED_TAG
            GREEN  "$TAG  $FILE"
        elif [ "$TAG" == "D" ];then
            TAG=$DELETED_TAG
            RED "$TAG  $FILE"
        elif [ "$TAG" == "A" ];then
            TAG=$ADDED_TAG
            YELLOW "$TAG  $FILE"
        fi
        dir=${FILE%/*}
        if [ -e  $FILE ];then
            if [ -d  $dir ];then
                mkdir -p $1/$dir
            fi
        fi
        if [ -f  $FILE ];then
			cp -rfp $FILE $1/$FILE
        elif [ -d  $FILE ];then
			target=${FILE%/*}
			target=${target%/*}
			cp  -rfp $FILE $1/$target
        fi
        if [ ! -z $2 ];then
            echo "$TAG  $FILE" >> $2
        fi
    done
}

GREEN "Checking the code, please wait..."
if [ $# != 0 ];then
    if [ "$DIFF_COMMIT" = 1 ];then
        if [ ! -z $2 ];then
            DEST_COMMIT=$ROOT/Patch/$BRANCH/Commit-$2
            LOG_COMMIT=$ROOT/Patch/$BRANCH/Commit-$2/Readme.txt
        fi
        if [ "$PATCH_MODE" == 2 ];then
            mkdir -p $DEST_COMMIT/after
            subfiles=`git diff --name-status $1^ $1 | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
                                        else if ($1 ==" D" || $1 =="D") {print "D"$2}
                                        else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
                                        }'`
            git checkout $1
            fetch_list "$DEST_COMMIT"/after $LOG_COMMIT
            git checkout HEAD^
            mkdir -p $DEST_COMMIT/before
            fetch_list "$DEST_COMMIT"/before
            git checkout $BRANCH
        else
            mkdir -p $DEST_COMMIT
            subfiles=`git diff --name-status $1^ $1 | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
                                        else if ($1 ==" D" || $1 =="D") {print "D"$2}
                                        else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
                                        }'`
            git checkout $1
            fetch_list $DEST_COMMIT $LOG_COMMIT
            git checkout $BRANCH
        fi
    elif [ "$DIFF_BRANCH" = 1 ];then
        if [ "$PATCH_MODE" == 2 ];then
            mkdir -p $DEST_BRANCH/after
            subfiles=`git diff --name-status $1 | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
                                        else if ($1 ==" D" || $1 =="D") {print "D"$2}
                                        else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
                                        }'`
            fetch_list $DEST_BRANCH/after
            git checkout $1
            mkdir -p $DEST_BRANCH/before
            fetch_list $DEST_BRANCH/before
            git checkout $BRANCH
        else
            mkdir -p $DEST_BRANCH
            subfiles=`git diff --name-status $1 | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
                                        else if ($1 ==" D" || $1 =="D") {print "D"$2}
                                        else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
                                        }'`
            fetch_list $DEST_BRANCH $LOG_BRANCH
        fi
    fi
else
    if [ "$PATCH_MODE" == 1 ];then
        mkdir -p $DEST_MODE1
        subfiles=`git status -s | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
									   else if ($1 ==" D" || $1 =="D") {print "D"$2}
									   else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
									   }'`
        fetch_list $DEST_MODE1 $LOG_MODE1
    elif [ "$PATCH_MODE" == 2 ];then
        mkdir -p $DEST_AFTER
        subfiles=`git status -s | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
									   else if ($1 ==" D" || $1 =="D") {print "D"$2}
									   else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
									   }'`
        fetch_list $DEST_AFTER $LOG_MODE2
        mkdir -p $DEST_BEFORE
        subfiles=`git status -suno | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
									   else if ($1 ==" D" || $1 =="D") {print "D"$2}
									   else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
									   }'`
        git stash
        fetch_list $DEST_BEFORE
        git stash pop
    elif [ "$PATCH_MODE" == 3 ];then
        mkdir -p $DEST_MODE3
        subfiles=`git status -s | awk '{if ($1 ==" M" || $1 =="M") {print "M"$2}
									   else if ($1 ==" D" || $1 =="D") {print "D"$2}
									   else if ($1 ==" A" || $1 =="A" || $1 =="??" ) {print "A"$2}
									   }'`
        fetch_list $DEST_MODE3 $LOG_MODE3
    fi
fi



